name: Docker Image CI
on:
  push:
    branches: [ main, integration, laboratory, feature/* ]
env:
  team: "coe"
  language: "wordpres"
  cache-name: "cache-davi-coe-wordpres-mngr-template"
  IMAGE_NAME: "fundacionbolivar"
  TEST_TAG: fundacionbolivar:test
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}


jobs:

    build:
    
      runs-on: ubuntu-latest

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v3

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-2

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
          
        - name: Build 
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: wordpresstest
          run: |
            echo $ECR_REGISTRY
            docker build -t $ECR_REGISTRY$GITHUB_SHA --no-cache=true .
            docker save $ECR_REGISTRY$GITHUB_SHA -o /tmp/$ECR_REGISTRY$GITHUB_SHA.tar
        
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
            
        - name: Build and export
          uses: docker/build-push-action@v4
          with:
              context: .
              tags: myimage:latest
              outputs: type=docker,dest=/tmp/myimage.tar
        
        -  name: Upload artifact
           uses: actions/upload-artifact@v3
           with:
              name: myimage
              path: /tmp/myimage.tar
          
    build-run-push:
      needs: build
      runs-on: ubuntu-latest
      steps:

        - name: Build and Push Docker Image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: wordpresstest
            IMAGE_TAG: wordpress_6.1.1-php7.4-apache
          
          run: |
            echo $ECR_REGISTRY
            context: .
            docker build -t $ECR_REGISTRY$GITHUB_SHA --no-cache=true .
            docker tag $ECR_REGISTRY$GITHUB_SHA $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

