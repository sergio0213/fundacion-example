name: Docker Image CI
on:
  push:
    branches: [ main, integration, laboratory, feature/* ]
env:
  team: "coe"
  language: "wordpres"
  cache-name: "cache-davi-coe-wordpres-mngr-template"
  IMAGE_NAME: "fundacionbolivar"
  TEST_TAG: fundacionbolivar:test
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}


jobs:

    build:
    
      runs-on: ubuntu-latest

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v3

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-2

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
          
        - name: Build 
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: wordpresstest
            IMAGE_TAG: fundacionbolivar
          run: |
            echo $ECR_REGISTRY
            docker build -t $ECR_REGISTRY$GITHUB_SHA --no-cache=true .
            docker tag $ECR_REGISTRY$GITHUB_SHA $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                  
        - name: push 
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: wordpresstest
            IMAGE_TAG: fundacionbolivar
          run: |
            echo $ECR_REGISTRY
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            
    Trivy_vulnerability:
      name: Trivy
      runs-on: ubuntu-20.04
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1   
        
        - name: Build 
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: wordpresstest
            IMAGE_TAG: fundacionbolivar
          run: |
            echo " ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}}"
            docker build -t $ECR_REGISTRY$GITHUB_SHA --no-cache=true .
            docker tag $ECR_REGISTRY$GITHUB_SHA $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
       
        - name: Run Trivy vulnerability scanner
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: wordpresstest
            IMAGE_TAG: fundacionbolivar
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: '${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}}'
            format: 'sarif'
            output: 'trivy-results.sarif'
  
        - name: Upload Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v2
          with:
            sarif_file: 'trivy-results.sarif'        

          
